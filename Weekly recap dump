4/11-17
Last week, I identified that I was struggling with feeling overwhelmed and spoke with my mentor about it. Together, we worked out a plan of action so that I could always know what my next steps were, and set weekly learning goals so that I could feel like I had some sense of progress.
I started learning things on A Cloud Guru, which has been a great help. I learned about cloud computing and set up and SSH’d into an EC2 instance, and learned about AWS permissions and groups. I didn’t get everything I wanted done due to some issues with sleep, but I’m getting back on the horse this next week!

4/18-24
This week became a pretty big milestone for me. Finally, all these concepts started blending together enough to let me feel like I was finally understanding what I’m learning. On Friday, after I manually created a VPC, routing table, subnets, and NACLs in AWS, I realized confusion had given way to excitement! All those words I just typed, I UNDERSTAND THEM. They’re no longer just nebulous techy terms that I’m trying to glue into my brain. 
This is really big for several reasons, but the biggest is the dreaded cloud of imposter syndrome. I know it’s something everyone experiences, but for me it’s one of my bigger clouds. I didn’t plan on getting into tech. I’m just some girl from the boonies in Louisiana and I marvel every day at how far I’ve gotten in the tech world without a real plan or direction. I started at GoDaddy because it was a sales job, with no clue of just how many doors would open up as a result. I'm incredibly excited to start intentionally working towards specific goals, to keep furthering my knowledge. 
That said, let’s review this week because it was a really good one! 
I completed chapters 5-7 of the intro to AWS course on a cloud guru. This went over the most common file storage options available through AWS, and went into more detail on the benefits of using S3 and S3 glacier, as well as EFS, Amazon’s elastic filesystem storage. I set up a bucket in S3, added an object to it, enabled bucket versioning, made the bucket available to the public, and set the bucket policies to allow anonymous access to the bucket. Chapter 6 went over various database options, including RDS, DynamoDB, and Elasticache. In Chapter 7, I learned about some of the networking services AWS offers, touching on Route 53, VPC’s, and Cloudfront. I wrapped up this week in AWS content by completing a lab in which I manually created a VPC, created an Internet Gateway, edited the Main Route Table, created a NACL and associated it, and finally created two public subnets across two availability zones. 
My other focus this week was on Terraform (https://acloud.guru/overview/hashicorp-certified-terraform-associate-1) I completed chapter 3, which walked me through creating a t3.micro ec2 instance with AWS. The code for this can be found on https://github.com/tinadotmoardots/learning. I really enjoyed going through the manual settings with AWS first, because using terraform to do the same thing feels like magic, honestly. 
I ended up finishing everything I planned to do this week early, so I took some time to go through an additional course, https://learn.acloud.guru/course/admin-guide-to-bash-scripting. I finished up to Chapter 2 and completed the lab, which had me write a backup script to fulfill a hypothetical user request. I then SSH’d into a test server and ran the script to verify it worked as expected. This code was also uploaded to my github repository. 
I’ve also been taking the time to go through the GD Learn courses for hosting basics to refresh my memory of common hosting troubleshooting. I’m really glad I started doing this, because nothing boosts your confidence like reviewing basics! I’m also learning plenty of new things and filling in some gaps in my knowledge.
I think that’s it for this week! I feel really good about all of this. I feel like I’m making solid progress, and I’m feeling incredibly proud of myself for how far I’ve come. 

4/25-5/1
This week my focus was more on Terraform and Linux. I worked on learning more about the Terraform state file and what it does. I also began working more with Terraform variables and outputs, and I'll be honest, things became a bit nebulous and foggy again. My plan for the next week is to spend some time re-reviewing the concepts on ACG before moving on. I'm also struggling with feeling confident enough in bash, so I'll be spending more time with that as well. My mentor made a study guide for me for my tech interview with Hashicorp, and I felt fairly confident about that as I completed it, but oof. I know what I know, and I know it well, but there's so much that I don't know. I wonder if I'll ever feel 100% confident in my knowledge? If I'm not, that's probably a good thing, right? That uncertainty is helping drive me to make sure I solidify these concepts and find ways to put them into practice. 
That said, my Terraform lab for the week was completing setup of an Apache Web Server on AWS. That was easy enough after the big youtube project! After that, the remaining Terraform stuff was learing about state storage and exploring state options with things like AWS S3, which tied into the AWS stuff I've been learing as well. 
For Linux this week, I worked a little bit with loops and substitutions and implemented some flow control into a backup script. I feel like I understand the most basic of things in bash, but I'm still in could pass a multiple choice test but fail if I was graded on writing and demoing my own scripts. 
I had my HTL interview this week! I'm not super confident on how that went, but every interview is an opportunity for practice. I let nerves get the best of me, which I wasn't expecting to happen. I did the best I could in the moment though, and that's all I can ask of myself. In the future I'll be sure to get some better interview prep in. 

5/9-5/15
Code wars was rough. I'm at the point where I know what the legos are, and what they're used for, but I'm struggling with putting it into practice. I can follow a guide but not put things together in my own head very well. I feel like I tend to just look up how to do things and essentially just copy and paste what I find. I'd like to get to the point where I don't have to look up things. I'm guessing this is just a hump I'll have to brute force myself through. 

I figured out some Terraform stuff, like I said before, the wording on things seems to be what is making it rough on me. For example, in the lesson that modules were introduced, it was phrased, "a module is a container for multiple resources that can be used together." That made no sense to me and was just confusing. However, later on, it was phrased as, "Terraform modules are a good way to abstract out repeated chunks of code, making it reusable across other projects." That one made sense!

This week I honestly didn't get much done because of being down for the covid shot. 

What was your solution to the Codewars program, how would you optimize it? 
#!/bin/bash

countToTwenty() {
 echo "Count: "{1..20}
}

countToTwenty

However, I did end up looking this up. Idk if I'm putting too much pressure too soon on myself, but I don't like that I had to. I don't think I could optimize it any further?
What are three things learned from Linux Operating System Fundamentals?
I learned that Linux is FASCINATING OH MY. I learned about how OS's in general work, which was neat. I learned what a kernel is (a computer program at the core of a computer's operating system that has complete control over everything in the system).

5/16-5/22

What is a VPN, and when would you use it?
A VPN is a virtual private network, and it uses the IP connectivity of the internet to connect remote clients to remote ites in an encrypted private connection. I would use it to privately and securely connect to internal company resources, to protect myself from unsecured wifi, like at a coffee shop or a hotel, etc. 

What is the TCP Handshake? 
The TCP handshake is a three way handshake that happens before data is transmitted to ensure there is a good connection. It first sends a syn, then waits for a syn ack, and then sends another ack, and then data can be sent. 

What is the anatomy of an IP address? 
For IPv4, it's a 32 bit number, split into 4 8 bit octets. The first octet represents the class. The first two octets are the network part, and the last two are the host part. 

What are some different ways to debug Terraform?
You can use TF_LOG to enable verbose logging in Terraform. You can also use trace, debug, info, warn, error, but trace is the msot reliable and verbose. 

How’d the AWS Cloud Practitioner stuff go? 
The AWS Cloud Practicioner is currently too basic for AWS lol. But it's a good refresher. I'm skipping some of the stuff I already have a good handle on, like IAM and such. I'll keep going through it because best practices and all that.

Is the pacing okay?
Yes, pacing is going well, I feel like. 

Are you understanding the content?
For the most part, yes. I still don't feel confident with scripts, but I also haven't really found time to delve into it in earnest. There's just this brick wall I need to find a way over. Linux utilities makes my brain shut down and I'm still getting over that hump. Chapter 2.3 went from ok I get it to "ps -eo pid, user, start_time, cmd | grep -v grep | grep -e START -e apache" I think it may just be the difference between knowing words in a language, and knowing how to speak it. I can follow someone's blueprint, but not use the tools to build my own. 

Is there stuff you wish was covered differently or in more detail? 
Just on the linux stuff, like in the above example I know that this is listing processes, and it's saying to have the columns be pid, user, start_time and command, but after that I'm lost. 

Things I thought were cool/exciting: Learning about OSI was really cool, I didn't realize how insane the early tech nerd community was. Like literally all of the internet and computers exist as they currently are because a bunch of nerds had morals and strong feelings about how code should be handled. Terraform workspaces was super awesome, too. Being able to have a test workspace and then run code on it, before swapping over and running it on another is really nice to have, epecially as you can set specific things to happen depending on the workspace name you're currently using. I also really like that I now understand more about how digwebinterface works, and how to read traces in there more. 

Things that were hard: Most of that OS fundamentals course is TORTURE. But his enthusiasm for it does shine through and gets me excited at times. It's a dry subject though, so I get it. 

Things I need to go back and look up: 
-What exactly is a container and how is it used
-netmask
-With subnetting, what does masking off mean?

All in all, this week felt pretty good. I don't feel like I had any major leaps and bounds, but I also didn't feel like I was losing traction. This is especially good because I also caught up on last weeks work from when I was out from the covid shot. 
